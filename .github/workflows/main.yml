name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x]
        mongodb-version: ['4.4', '5.0']

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
      env:
        CI: true
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret
        MONGO_URI: mongodb://localhost:27017/test-db
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v2

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to Staging
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku container:login
        heroku container:push web -a your-staging-app
        heroku container:release web -a your-staging-app

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Deploy to Production
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      run: |
        heroku container:login
        heroku container:push web -a your-production-app
        heroku container:release web -a your-production-app

  backup:
    runs-on: ubuntu-latest
    steps:
    - name: MongoDB Backup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DB_HOST }}
        username: ${{ secrets.DB_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          mongodump --uri="${{ secrets.MONGO_URI }}" --out=/backup/$(date +%Y-%m-%d)
          aws s3 sync /backup s3://${{ secrets.BACKUP_BUCKET }}/mongodb 